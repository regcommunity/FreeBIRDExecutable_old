package report_cells

import output_tables.*
import sdd_domains.* 

class Cell_F_01_02_REF_OutputItem_row_0040_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_OTHER_THAN_CURRENT_ACCOUNTS_LIABILITIES_REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CURRENT_ACCOUNTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPEN_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TERM_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_WITH_AGREED_MATURITY_OTHER_THAN_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_DEPOSITS_NOT_PART_OF_MINIMUM_RESERVE_SYSTEM_IMF_PURPOSES_.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_O_W_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_THAN_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_DEPOSIT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.NON_TRANSFERABLE_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_INTERNET_PC_LINKED.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_INTERNET_PC_LINKED_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.HARDWARE_BASED_E_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY_O_W_SOFTWARE_BASED_E_MONEY.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0030_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0050_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0070_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value )) || (item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value ))) && 			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0080_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value )) || (item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_OTHER_THAN_CURRENT_ACCOUNTS_LIABILITIES_REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CURRENT_ACCOUNTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPEN_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TERM_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_WITH_AGREED_MATURITY_OTHER_THAN_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_DEPOSITS_NOT_PART_OF_MINIMUM_RESERVE_SYSTEM_IMF_PURPOSES_.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_O_W_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_THAN_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_DEPOSIT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.NON_TRANSFERABLE_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_INTERNET_PC_LINKED.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_INTERNET_PC_LINKED_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.HARDWARE_BASED_E_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY_O_W_SOFTWARE_BASED_E_MONEY.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0090_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value )) || (item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0100_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value )) || (item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_FINANCIAL_LIABILITIES_DESIGNATED_AT_FAIR_VALUE_THROUGH_PROFIT_OR_LOSS.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0110_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_MEASURED_AT_AMORTISED_COST.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value ))) && 			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0120_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_MEASURED_AT_AMORTISED_COST.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_OTHER_THAN_CURRENT_ACCOUNTS_LIABILITIES_REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CURRENT_ACCOUNTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPEN_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TERM_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_WITH_AGREED_MATURITY_OTHER_THAN_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_DEPOSITS_NOT_PART_OF_MINIMUM_RESERVE_SYSTEM_IMF_PURPOSES_.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_O_W_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_THAN_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_DEPOSIT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.NON_TRANSFERABLE_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_INTERNET_PC_LINKED.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_INTERNET_PC_LINKED_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.HARDWARE_BASED_E_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY_O_W_SOFTWARE_BASED_E_MONEY.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0130_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_MEASURED_AT_AMORTISED_COST.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0140_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_MEASURED_AT_AMORTISED_COST.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0150_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_SPREAD_OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.FORWARD.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TOTAL_RETURN_SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_DEFAULT_SWAP.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0060_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0020_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_SPREAD_OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.FORWARD.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TOTAL_RETURN_SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_DEFAULT_SWAP.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0290_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0300_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0010_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.IFRS_FINANCIAL_LIABILITIES_HELD_FOR_TRADING.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.IFRS.value )) || (item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value ))) && 			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0061_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value ))) && 			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0062_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_SPREAD_OPTION.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.FORWARD.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TOTAL_RETURN_SWAP.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CREDIT_DEFAULT_SWAP.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0063_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0064_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_OTHER_THAN_CURRENT_ACCOUNTS_LIABILITIES_REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CURRENT_ACCOUNTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPEN_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TERM_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_WITH_AGREED_MATURITY_OTHER_THAN_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_DEPOSITS_NOT_PART_OF_MINIMUM_RESERVE_SYSTEM_IMF_PURPOSES_.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_O_W_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_THAN_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_DEPOSIT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.NON_TRANSFERABLE_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_INTERNET_PC_LINKED.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_INTERNET_PC_LINKED_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.HARDWARE_BASED_E_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY_O_W_SOFTWARE_BASED_E_MONEY.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0065_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0066_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_TRADING_FINANCIAL_LIABILITIES.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0141_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_NON_TRADING_NON_DERIVATIVE_FINANCIAL_LIABILITIES_MEASURED_AT_A_COST_BASED_METHOD.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value ))) && 			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0142_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_NON_TRADING_NON_DERIVATIVE_FINANCIAL_LIABILITIES_MEASURED_AT_A_COST_BASED_METHOD.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			((item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_OTHER_THAN_CURRENT_ACCOUNTS_LIABILITIES_REPURCHASE_AGREEMENTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.CURRENT_ACCOUNTS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OPEN_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TERM_REPURCHASE_AGREEMENT_INSTRUMENT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_WITH_AGREED_MATURITY_OTHER_THAN_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_DEPOSITS_NOT_PART_OF_MINIMUM_RESERVE_SYSTEM_IMF_PURPOSES_.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.DEPOSITS_O_W_COUNTERPART_LIABILITY_TO_NON_DERECOGNISED_LOANS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OTHER_THAN_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_DEPOSIT.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.NON_TRANSFERABLE_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_OVERNIGHT_DEPOSITS_OTHER_THAN_INTERNET_PC_LINKED.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.TRANSFERABLE_INTERNET_PC_LINKED_OVERNIGHT_DEPOSITS.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.HARDWARE_BASED_E_MONEY.value )) || (item.TYP_INSTRMNT.value == (sdd_domains.TYP_INSTRMNT_domain.ELECTRONIC_MONEY_O_W_SOFTWARE_BASED_E_MONEY.value ))) && 			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0143_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_NON_TRADING_NON_DERIVATIVE_FINANCIAL_LIABILITIES_MEASURED_AT_A_COST_BASED_METHOD.value ))) && 			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0144_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.ACCNTNG_CLSSFCTN.value == (sdd_domains.ACCNTNG_CLSSFCTN_domain.NGAAP_NON_TRADING_NON_DERIVATIVE_FINANCIAL_LIABILITIES_MEASURED_AT_A_COST_BASED_METHOD.value ))) && 			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			((item.ACCNTNG_FRMWRK.value == (sdd_domains.ACCNTNG_FRMWRK_domain.NATIONAL_GAAP_NOT_CONSISTENT_WITH_IFRS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0170_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0240_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.TAX_LIABILITIES.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0250_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0260_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.DEFERRED_TAX_LIABILITIES.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0270_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.SHARE_CAPITAL_REPAYABLE_ON_DEMAND.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0280_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0190_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_EMPLOYEE_BENEFITS_OTHER_THAN_PENSION_AND_OTHER_POST_EMPLOYMENT_DEFINED_BENEFIT_OBLIGATIONS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0180_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_EMPLOYEE_BENEFITS_PENSION_AND_OTHER_POST_EMPLOYMENT_DEFINED_BENEFIT_OBLIGATIONS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0200_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_RESTRUCTURING.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0210_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_PENDING_LEGAL_ISSUES_AND_TAX_LITIGATION.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0230_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_OTHER_THAN_EMPLOYEE_BENEFITS_RESTRUCTURING_PENDING_LEGAL_ISSUES_AND_TAX_LITIGATION_OFF_BALANCE_SHEET_EXPOSURES_SUBJECT_TO_CREDIT_RISK.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0160_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_HDG.value == (sdd_domains.TYP_HDG_domain.PORTFOLIO_FAIR_VALUE_HEDGES_OF_INTEREST_RATE_RISK.value )))			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0175_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			((item.TYP_ACCNTNG_ITM.value == (sdd_domains.TYP_ACCNTNG_ITM_domain.PROVISIONS_FUNDS_FOR_GENERAL_BANKING_RISKS.value ))) && 			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0220_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			((item.HLD_SL_INDCTR.value == (sdd_domains.HLD_SL_INDCTR_domain.NOT_HELD_FOR_SALE.value ))) && 			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}
class Cell_F_01_02_REF_OutputItem_row_0295_col_0010
{
	refers F_01_02_REF_OutputItem_Table f_01_02_REF_OutputItem_Table
	refers F_01_02_REF_OutputItem[] f_01_02_REF_OutputItems
	
	op String metric_value() {
		f_01_02_REF_OutputItems.fold(0, [  a, b |  a + b.CRRYNG_AMNT() ]).toString				
		}
	op  void calc_referenced_items() {
				
			val items = f_01_02_REF_OutputItem_Table.f_01_02_REF_OutputItems.filter(item | 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true && 
			 true
			)			
				for( F_01_02_REF_OutputItem item : items )
						{
							
								f_01_02_REF_OutputItems.add(item)
						}				
		}
	op String  init() {
			org.eclipse.efbt.regpot_desktop.orchestrator.Orchestration.init(this)
		 	calc_referenced_items() 
		return null
			}
}

